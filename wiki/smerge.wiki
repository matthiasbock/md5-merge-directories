#summary Secure Merge

= Secure Merge =

== the only difference to scp+ ==
Whenever a different target file exists, append ".md5 hash" to filename and transfer to this target filename instead.

== Usage ==

Requires Python being installed. Tested with python 2.6.

Open a console/shell/terminal and type

{{{
     smerge /media/HD1 /media/HD2
}}}

This will merge all files in /media/HD2/ into /media/HD1/. Identical files will be deleted in /media/HD2, differing files will be renamed to {filename}.{md5 hash} and moved to the corresponding folder in /media/HD1. Symbolic links will also be moved.

An exception is thrown whenever unmergeable objects are found, such as file and directory. Program exits then, but every merge process can be interrupted and resumed at any time without damaging the data.
The exception's error message should give you the necessary hint, to solve the problem manually. If it's a bug, weakness or whatever, [http://code.google.com/p/md5-merge-directories/issues/list please report it].


= SSH =

== What is SSH ==
A Secure Shell is an encrypted remote terminal.
Provided that you have a login, you can remotely execute a command on a server, typing the following into your console:
{{{
     ssh user@remote-server.org md5sum /testfile
}}}

== Public Key Authentication ==

Setting up public key authentication is necessary, if you plan to use smerge over SSH. Else many login prompts will show up.

== smerge over SSH ===

Using smerge over SSH allows for merging tons of data across a network or the internet without transfering the data. The smerge util instead remotely calls md5sum on the server, thereby requesting the already calculated file hash, rather than requesting the data and calculate it by itself.

It uses the same command as without, only the parameters must be specified correctly:
{{{
     smerge user@server1:/media/data/ root@server2:/media/data/
}}}

This will login _user_ on _server1_ as well as _root_ on _server2_, and merge all files in _/media/data/_ on _server2_ into _/media/data/_ on _server1_. It's as simple as that. Other than when using ssh from the console, to md5merge you MUST specify a user, else the statement will not be recognized as an SSH location identifier.

Note that : and @ are no special characters, at least not on Linux ext file systems. Whenever an @ is followed by a :/ or :~ in a folder name, smerge will interpret this as an attempt to use SSH, even if folders actually named like this are present locally!